version: '3'

services:
  db:
    restart: always
    image: "postgres:13-alpine"
    restart: always
    volumes:
      - ./db_data/:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - backands_network

  web_api:
    restart: always
    build: .
    command: uvicorn main:app --reload --workers 1 --host 0.0.0.0 --port 8080
    networks:
      - backands_network
    depends_on: 
      - db
    
  server:
    restart: unless-stopped
    # build: ./server_nginx/.
    image: nginx:latest
    volumes:
      - ./server_nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./server_nginx/certbot/conf:/etc/letsencrypt
      - ./server_nginx/certbot/www:/var/www/certbot
    depends_on:
      - web_api 
    networks:
      - backands_network
    ports:
      - "80:80"
      - "443:443"
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
      
  certbot:
    container_name: certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes: 
      - ./server_nginx/certbot/conf:/etc/letsencrypt
      - ./server_nginx/certbot/www:/var/www/certbot
    networks:
      - backands_network
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    

networks:
  backands_network:
    driver: bridge
