version: '3'

services:
  db:
    restart: always
    image: "postgres:13-alpine"
    restart: always
    volumes:
      - ./db_data/:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - backands_network

  web_api:
    restart: always
    build: .
    command: uvicorn main:app --reload --workers 1 --host 0.0.0.0 --port 8080
    networks:
      - backands_network
    depends_on: 
      - db
  nginx:
    image: nginx:1.17
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      # - ./public:/usr/share/nginx/html
    depends_on: 
      - web_api
    networks:
      - backands_network
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    
  # server:
  #   restart: always
  #   build: ./server_nginx/.
  #   volumes:
  #     - ./server_nginx/html_files/:/usr/share/nginx/html
  #   depends_on:
  #     - web_api 
  #   networks:
  #     - backands_network
  #   ports:
  #     - "80:80"
  #     - "443:443"

networks:
  backands_network:
    driver: bridge
